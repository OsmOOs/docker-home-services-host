version: "2"

services:
  traefik:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${LOCAL_STORAGE}/traefik/config/traefik.toml:/etc/traefik/traefik.toml
      - ${LOCAL_STORAGE}/traefik/config/acme.json:/acme.json
    environment:
      - OVH_ENDPOINT=${OVH_ENDPOINT}
      - OVH_APPLICATION_KEY=${OVH_APPLICATION_KEY}
      - OVH_APPLICATION_SECRET=${OVH_APPLICATION_SECRET}
      - OVH_CONSUMER_KEY=${OVH_CONSUMER_KEY}
  transmission:
    image: haugene/transmission-openvpn
    container_name: transmission
    restart: unless-stopped
    networks:
      - proxy
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    expose:
      - "9091"
    volumes:
      - ${LOCAL_STORAGE}/transmission/openvpn/custom.ovpn:/etc/openvpn/custom/default.ovpn
      - ${MOUNT_POINT}/downloads/bittorrent:/data
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      ## Container specific variables
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - OPENVPN_OPTS=${OPENVPN_OPTS}
      - LOCAL_NETWORK=${LOCAL_NETWORK}
#      - ENABLE_UFW=${ENABLE_UFW}
#      - UFW_ALLOW_GW_NET=${UFW_ALLOW_GW_NET}
#      - UFW_EXTRA_PORTS=${UFW_EXTRA_PORTS}
#      - TRANSMISSION_WEB_HOME=${TRANSMISSION_WEB_HOME}
#      - TRANSMISSION_WEB_UI=${TRANSMISSION_WEB_UI}
      - WEBPROXY_ENABLED=${WEBPROXY_ENABLED}
#      - WEBPROXY_PORT=${WEBPROXY_PORT}
      ## Transmission configuration
      # Bandwidth
#      - TRANSMISSION_ALT_SPEED_ENABLED=${TRANSMISSION_ALT_SPEED_ENABLED}
      - TRANSMISSION_ALT_SPEED_UP=${TRANSMISSION_ALT_SPEED_UP}
      - TRANSMISSION_ALT_SPEED_DOWN=${TRANSMISSION_ALT_SPEED_DOWN}
      - TRANSMISSION_SPEED_LIMIT_DOWN=${TRANSMISSION_SPEED_LIMIT_DOWN}
#      - TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED=${TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED}
      - TRANSMISSION_SPEED_LIMIT_UP=${TRANSMISSION_SPEED_LIMIT_UP}
#      - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=${TRANSMISSION_SPEED_LIMIT_UP_ENABLED}
#      - TRANSMISSION_UPLOAD_SLOTS_PER_TORRENT=${TRANSMISSION_UPLOAD_SLOTS_PER_TORRENT}
      # Blocklists
#      - TRANSMISSION_BLOCKLIST_URL=${TRANSMISSION_BLOCKLIST_URL}
#      - TRANSMISSION_BLOCKLIST_ENABLED=${TRANSMISSION_BLOCKLIST_ENABLED}
      # Files and Locations
      - TRANSMISSION_DOWNLOAD_DIR=${TRANSMISSION_DOWNLOAD_DIR}
      - TRANSMISSION_INCOMPLETE_DIR=${TRANSMISSION_INCOMPLETE_DIR}
      - TRANSMISSION_INCOMPLETE_DIR_ENABLED=${TRANSMISSION_INCOMPLETE_DIR_ENABLED}
#      - TRANSMISSION_PREALLOCATION=${TRANSMISSION_PREALLOCATION}
#      - TRANSMISSION_RENAME_PARTIAL_FILES=${TRANSMISSION_RENAME_PARTIAL_FILES}
#      - TRANSMISSION_START_ADDED_TORRENTS=${TRANSMISSION_START_ADDED_TORRENTS}
#      - TRANSMISSION_TRASH_ORIGINAL_TORRENT_FILES=${TRANSMISSION_TRASH_ORIGINAL_TORRENT_FILES}
      - TRANSMISSION_UMASK=${TRANSMISSION_UMASK}
      - TRANSMISSION_WATCH_DIR=${TRANSMISSION_WATCH_DIR}
      - TRANSMISSION_WATCH_DIR_ENABLED=${TRANSMISSION_WATCH_DIR_ENABLED}
      # Misc
#      - TRANSMISSION_CACHE_SIZE_MB=${TRANSMISSION_CACHE_SIZE_MB}
      - TRANSMISSION_DHT_ENABLED=${TRANSMISSION_DHT_ENABLED}
#      - TRANSMISSION_ENCRYPTION=${TRANSMISSION_ENCRYPTION}
#      - TRANSMISSION_LAZY_BITFIELD_ENABLED=${TRANSMISSION_LAZY_BITFIELD_ENABLED}
#      - TRANSMISSION_LPD_ENABLED=${TRANSMISSION_LPD_ENABLED}
#      - TRANSMISSION_MESSAGE_LEVEL=${TRANSMISSION_MESSAGE_LEVEL}
      - TRANSMISSION_PEX_ENABLED=${TRANSMISSION_PEX_ENABLED}
#      - TRANSMISSION_PREFETCH_ENABLED=${TRANSMISSION_PREFETCH_ENABLED}
#      - TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=${TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED}
#      - TRANSMISSION_SCRIPT_TORRENT_DONE_ENABLED=${TRANSMISSION_SCRIPT_TORRENT_DONE_ENABLED}
#      - TRANSMISSION_SCRIPT_TORRENT_DONE_FILENAME=${TRANSMISSION_SCRIPT_TORRENT_DONE_FILENAME}
#      - TRANSMISSION_UTP_ENABLED=${TRANSMISSION_UTP_ENABLED}
      # Peers
#      - TRANSMISSION_PEER_CONGESTION_ALGORITHM=${TRANSMISSION_PEER_CONGESTION_ALGORITHM}
#      - TRANSMISSION_PEER_ID_TTL_HOURS=${TRANSMISSION_PEER_ID_TTL_HOURS}
#      - TRANSMISSION_PEER_LIMIT_GLOBAL=${TRANSMISSION_PEER_LIMIT_GLOBAL}
#      - TRANSMISSION_PEER_LIMIT_PER_TORRENT=${TRANSMISSION_PEER_LIMIT_PER_TORRENT}
#      - TRANSMISSION_PEER_SOCKET_TOS=${TRANSMISSION_PEER_SOCKET_TOS}
      # Peer port
      - TRANSMISSION_PEER_PORT=${TRANSMISSION_PEER_PORT}
#      - TRANSMISSION_PEER_PORT_RANDOM_HIGH=${TRANSMISSION_PEER_PORT_RANDOM_HIGH}
#      - TRANSMISSION_PEER_PORT_RANDOM_LOW=${TRANSMISSION_PEER_PORT_RANDOM_LOW}
#      - TRANSMISSION_PEER_PORT_RANDOM_ON_START=${TRANSMISSION_PEER_PORT_RANDOM_ON_START}
      - TRANSMISSION_PORT_FORWARDING_ENABLED=${TRANSMISSION_PORT_FORWARDING_ENABLED}
      # Queuing
#      - TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=${TRANSMISSION_DOWNLOAD_QUEUE_ENABLED}
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=${TRANSMISSION_DOWNLOAD_QUEUE_SIZE}
#      - TRANSMISSION_QUEUE_STALLED_ENABLED=${TRANSMISSION_QUEUE_STALLED_ENABLED}
#      - TRANSMISSION_QUEUE_STALLED_MINUTES=${TRANSMISSION_QUEUE_STALLED_MINUTES}
#      - TRANSMISSION_SEED_QUEUE_ENABLED=${TRANSMISSION_SEED_QUEUE_ENABLED}
#      - TRANSMISSION_SEED_QUEUE_SIZE=${TRANSMISSION_SEED_QUEUE_SIZE}
      # RPC
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=${TRANSMISSION_RPC_AUTHENTICATION_REQUIRED}
#      - TRANSMISSION_RPC_BIND_ADDRESS=${TRANSMISSION_RPC_BIND_ADDRESS}
#      - TRANSMISSION_RPC_ENABLED=${TRANSMISSION_RPC_ENABLED}
#      - TRANSMISSION_RPC_HOST_WHITELIST=${TRANSMISSION_RPC_HOST_WHITELIST}
#      - TRANSMISSION_RPC_HOST_WHITELIST_ENABLED=${TRANSMISSION_RPC_HOST_WHITELIST_ENABLED}
      - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_RPC_PASSWORD}
#      - TRANSMISSION_RPC_PORT=${TRANSMISSION_RPC_PORT}
#      - TRANSMISSION_RPC_URL=${TRANSMISSION_RPC_URL}
      - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_RPC_USERNAME}
#      - TRANSMISSION_RPC_WHITELIST=${TRANSMISSION_WHITELIST}
#      - TRANSMISSION_RPC_WHITELIST_ENABLED=${TRANSMISSION_WHITELIST_ENABLED}
      # Scheduling
      - TRANSMISSION_ALT_SPEED_TIME_ENABLED=${TRANSMISSION_ALT_SPEED_TIME_ENABLED}
      - TRANSMISSION_ALT_SPEED_TIME_BEGIN=${TRANSMISSION_ALT_SPEED_TIME_BEGIN}
      - TRANSMISSION_ALT_SPEED_TIME_END=${TRANSMISSION_ALT_SPEED_TIME_END}
      - TRANSMISSION_ALT_SPEED_TIME_DAY=${TRANSMISSION_ALT_SPEED_TIME_DAY}
#      - TRANSMISSION_IDLE_SEEDING_LIMIT=${TRANSMISSION_IDLE_SEEDING_LIMIT}
#      - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=${TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED}
#      - TRANSMISSION_RATIO_LIMIT=${TRANSMISSION_RATIO_LIMIT}
#      - TRANSMISSION_RATIO_LIMIT_ENABLED=${TRANSMISSION_RATIO_LIMIT_ENABLED}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=9091"
      - "traefik.frontend.rule=Host:transmission.${DOMAIN_NAME}"
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    restart: unless-stopped
    networks:
      - proxy
    expose:
      - "8080"
      - "9090"
    volumes:
      - ${LOCAL_STORAGE}/sabnzbd/config:/config
      - ${MOUNT_POINT}/downloads/usenet/completed:/downloads
      - ${MOUNT_POINT}/downloads/usenet/processing:/incomplete-downloads
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:sabnzbd.${DOMAIN_NAME}"
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: unless-stopped
    networks:
      - proxy
    expose:
      - "9117"
    volumes:
      - ${LOCAL_STORAGE}/jackett/config:/config
      - ${MOUNT_POINT}/downloads/bittorrent/watching:/downloads
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=9117"
      - "traefik.frontend.rule=Host:jackett.${DOMAIN_NAME}"
  nzbhydra2:
    image: theotherp/nzbhydra2
    container_name: nzbhydra2
    restart: unless-stopped
    networks:
      - proxy
    expose:
      - "5076"
    volumes:
      - ${LOCAL_STORAGE}/nzbhydra2/config:/config
      - ${MOUNT_POINT}/downloads/bittorrent/watching:/downloads
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=5076"
      - "traefik.frontend.rule=Host:nzbhydra.${DOMAIN_NAME}"
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    depends_on:
      - transmission
      - sabnzbd
      - jackett
      - nzbhydra2
    networks:
      - proxy
    expose:
      - "7878"
    volumes:
      - ${LOCAL_STORAGE}/radarr/config:/config
      - ${MOUNT_POINT}/downloads:/downloads
      - ${MOUNT_POINT}/medias/movies:/movies
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=7878"
      - "traefik.frontend.rule=Host:radarr.${DOMAIN_NAME}"
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    depends_on:
      - transmission
      - sabnzbd
      - jackett
      - nzbhydra2
    networks:
      - proxy
    expose:
      - "8989"
    volumes:
      - ${LOCAL_STORAGE}/sonarr/config:/config
      - ${MOUNT_POINT}/downloads:/downloads
      - ${MOUNT_POINT}/medias/tv_shows:/tv
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=8989"
      - "traefik.frontend.rule=Host:sonarr.${DOMAIN_NAME}"
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    restart: unless-stopped
    depends_on:
      - transmission
      - sabnzbd
      - jackett
      - nzbhydra2
    networks:
      - proxy
    expose:
      - "8686"
    volumes:
      - ${LOCAL_STORAGE}/lidarr/config:/config
      - ${MOUNT_POINT}/downloads:/downloads
      - ${MOUNT_POINT}/medias/music:/music
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=8686"
      - "traefik.frontend.rule=Host:lidarr.${DOMAIN_NAME}"
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    restart: unless-stopped
    depends_on:
      - radarr
      - sonarr
    networks:
      - proxy
    expose:
      - "3579"
    volumes:
      - ${LOCAL_STORAGE}/ombi/config:/config
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=3579"
      - "traefik.frontend.rule=Host:ombi.${DOMAIN_NAME}"
  plexmediaserver:
    image: plexinc/pms-docker:${PLEX_TAG}
    container_name: plexmediaserver
    restart: unless-stopped
    networks:
      - proxy
    expose:
      - "32400"
    volumes:
      - ${LOCAL_STORAGE}/plexmediaserver/db:/config
      - ${MOUNT_POINT}/medias:/data
    environment:
      - TZ=${TZ}
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      - PLEX_CLAIM=${PLEX_CLAIM}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=32400"
      - "traefik.frontend.rule=Host:plex.${DOMAIN_NAME}"
  tautulli:
    image: tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    depends_on:
      - plexmediaserver
    networks:
      - proxy
    expose:
      - "8181"
    volumes:
      - ${LOCAL_STORAGE}/tautulli/config:/config
      - ${LOCAL_STORAGE}/plexmediaserver/db/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=8181"
      - "traefik.frontend.rule=Host:tautulli.${DOMAIN_NAME}"
  embyserver:
    image: emby/embyserver
    container_name: embyserver
    restart: unless-stopped
    networks:
      - proxy
    expose:
      - "8096"
      - "8920"
    volumes:
      - ${LOCAL_STORAGE}/embyserver/config:/config
      - ${MOUNT_POINT}/medias:/data
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=8096"
      - "traefik.frontend.rule=Host:emby.${DOMAIN_NAME}"
  airsonic:
    image: airsonic/airsonic
    container_name: airsonic
    restart: unless-stopped
    networks:
      - proxy
    expose:
      - "4040"
    volumes:
      - ${LOCAL_STORAGE}/airsonic/config:/airsonic/data
      - ${LOCAL_STORAGE}/airsonic/playlists:/airsonic/playlists
      - ${MOUNT_POINT}/medias/music:/airsonic/music
      - ${MOUNT_POINT}/medias/podcasts:/airsonic/podcasts
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
#      - JAVA_OPTS=${JAVA_OPTS}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=4040"
      - "traefik.frontend.rule=Host:airsonic.${DOMAIN_NAME}"
  mariadb_nextcloud:
    image: mariadb
    container_name: mariadb_nextcloud
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - ${LOCAL_STORAGE}/mariadb_nextcloud/db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
  nextcloud:
    image: nextcloud
    container_name: nextcloud
    restart: unless-stopped
    depends_on:
      - mariadb_nextcloud
    networks:
      - proxy
      - internal
    expose:
      - "80"
    volumes:
      - ${LOCAL_STORAGE}/nextcloud:/var/www/html
      - ${LOCAL_STORAGE}/nextcloud/apps:/var/www/html/custom_apps
      - ${LOCAL_STORAGE}/nextcloud/config:/var/www/html/config
      - ${MOUNT_POINT}/cloud/data:/var/www/html/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:cloud.${DOMAIN_NAME}"

networks:
  proxy:
    external: true
  internal:
    external: false